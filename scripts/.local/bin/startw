#!/bin/sh
# startw: Wayland session starter (POSIX-compliant)

VERSION="1.0"
DEFAULT_CONFIG="${HOME}/.winitrc"

# Base Wayland environment
export XDG_SESSION_TYPE=wayland
export GDK_BACKEND=wayland
export QT_QPA_PLATFORM=wayland-egl
export MOZ_ENABLE_WAYLAND=1

# POSIX-compliant error handling
die() { printf "%s\n" "$*" >&2; exit 1; }

validate_session() {
    [ -n "$WAYLAND_DISPLAY" ] || [ -n "$DISPLAY" ] && \
        die "Already in a graphical session!"
    case $(tty) in
        /dev/tty[0-9]*) return ;;
        *) die "Must be run from virtual terminal" ;;
    esac
}

setup_xdg_runtime() {
    [ -z "$XDG_RUNTIME_DIR" ] && {
        XDG_RUNTIME_DIR="/tmp/$(id -u)-runtime"
        mkdir -p -m 0700 "$XDG_RUNTIME_DIR" 2>/dev/null || \
            die "Failed to create XDG_RUNTIME_DIR"
        export XDG_RUNTIME_DIR
    }
}

load_config() {
    [ -f "$1" ] && . "$1" || {
        printf "No config found at %s\n" "$1" >&2
        return 1
    }
}

while getopts ":hvc:" opt; do
    case $opt in
        h) printf "Usage: %s [-hv] [-c config]\n" "$0"; exit 0 ;;
        v) printf "startw v%s\n" "$VERSION"; exit 0 ;;
        c) DEFAULT_CONFIG="$OPTARG" ;;
        \?) die "Invalid option: -$OPTARG" ;;
        :) die "Option -$OPTARG requires argument" ;;
    esac
done
shift $((OPTIND - 1))

# Session initialization
validate_session
setup_xdg_runtime
load_config "$DEFAULT_CONFIG" || die "Configuration failed"

# Verify config executed a compositor
[ -z "$_WAYLAND_COMPOSITOR_EXECUTED" ] && \
    die "Config file didn't launch compositor (missing exec?)"

exit 0
