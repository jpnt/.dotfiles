# denv: developer environment: wrapper interface to manually initialize various programming tools
# very silly script. not really updated and I just update it here and there when I need some glue

CURRENT_SHELL=$(ps -p $$ -o comm=)

usage() {
	echo "Usage: source denv <tool>"
	echo "Available tools: conda, cargo, dotnet, sdkman, nvm, bun"
}

# TODO: python, uv, pip? I never understood how python deals with shit. too many ways of doing the same shit
tool_init() {
	case "$1" in
		conda)
			eval "$(/home/${USER}/.local/share/anaconda3/bin/conda shell.$CURRENT_SHELL hook)"
			;;
		cargo)
			. "$HOME/.cargo/env"
			;;
		dotnet)
			export DOTNET_CLI_TELEMETRY_OPTOUT=1
			export DOTNET_ROOT=/usr/lib/dotnet/dotnet8
			export PATH="${DOTNET_ROOT}:${HOME}/.dotnet/tools:${PATH}"
			;;
		sdkman)
			export SDKMAN_DIR="${HOME}/.sdkman"
			. "${HOME}/.sdkman/bin/sdkman-init.sh"
			;;
		nvm)
			export NVM_DIR="${HOME}/.nvm"
			. "${NVM_DIR}/nvm.sh"
			;;
		bun)
			export BUN_INSTALL="${HOME}/.bun"
			test -d "$BUN_INSTALL" \
				|| curl -fsSL https://bun.sh/install | bash
			export PATH="${BUN_INSTALL}/bin:${PATH}"
			;;
		esp)
			. "${HOME}/esp-idf/export.sh"
			;;
		*)
			echo "Error: Unknown tool '$1'."
			usage
			;;
	esac
}

if [ -n "$1" ]; then
	tool_init "$1"
else
	usage
fi
