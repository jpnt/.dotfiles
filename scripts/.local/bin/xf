#!/bin/sh
# POSIX shell
# e(x)tract (f)ile(s)

print_format() {
    echo "Extracting archive format: $1"
}

check_tool() {
    command -v "$1" >/dev/null 2>&1 || { echo >&2 "$1 is required but it's not installed"; exit 1; }
}

display_help() {
    echo "Usage: $(basename "$0") [FILE...]"
    exit 0
}

extract() {
    for file in "$@"; do
        if [ "$file" = "-h" ] || [ "$file" = "--help" ]; then
            display_help
        elif [ -f "$file" ]; then
            case "$file" in
                *.tar|*.tar.xz|*.tar.gz|*.tgz|*.tar.bz2|*.tbz2|*.txz)
                    print_format "tar"
                    check_tool tar
                    tar xvf "$file" ;;
                *.bz2)
                    print_format "bzip2"
                    check_tool bunzip2
                    bunzip2 -v "$file" ;;
                *.rar)
                    print_format "rar"
                    check_tool unrar
                    unrar x "$file" ;;
                *.7z)
                    print_format "7z"
                    check_tool 7z
                    7z x "$file" ;;
                *.gz)
                    print_format "gzip"
                    check_tool gunzip
                    gunzip -v "$file" ;;
                *.zip)
                    print_format "zip"
                    check_tool unzip
                    unzip "$file" ;;
                *.lz4)
                    print_format "lz4"
                    check_tool unlz4
                    unlz4 "$file" ;;
                *.zst)
                    print_format "zstd"
                    check_tool unzstd
                    unzstd "$file" ;;
                *.xz)
                    print_format "xz"
                    check_tool unxz
                    unxz -v "$file" ;;
                *.iso)
                    extracted="iso_$(date +%Y-%m-%d_%H-%M-%S)"
                    print_format "iso extracted to $extracted"
                    check_tool 7z
                    7z x "$file" -o"$extracted" ;;
                *.deb)
                    print_format "deb"
                    check_tool dpkg
                    dpkg -x "$file" . ;;
                *.rpm)
                    print_format "rpm"
                    check_tool rpm2cpio
                    rpm2cpio "$file" | cpio -id ;;
                *.jar)
                    print_format "jar"
                    check_tool jar
                    jar xf "$file" ;;
                *.cab)
                    print_format "cab"
                    check_tool cabextract
                    cabextract -v "$file" ;;
                *.arj)
                    print_format "arj"
                    check_tool arj
                    arj x "$file" ;;
                *.cpio)
                    print_format "cpio"
                    check_tool cpio
                    cpio -id < "$file" ;;
                *.Z)
                    print_format "Z"
                    check_tool uncompress
                    uncompress -v "$file" ;;
                *)
                    echo "'$file' could not be extracted: unsupported file format" ;;
            esac
        else
            echo "'$file' is not a valid file"
        fi
    done
}

# Handle all arguments (including wildcards like *)
extract "$@"