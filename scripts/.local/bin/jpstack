#!/bin/sh
# jpstack: "minimal" post-install script for Void Linux
# installs my personal selection of tools, no BS
# =========================================
# !!! THIS SCRIPT IS A WORK IN PROGRESS !!!
# =========================================

set -e

# TODO: replace agetty* + .profile session madness with greetd
# TODO: replace runit + turnstile with s6 + 66
CORE_DESKTOP_PKG="\
dragon fcft-devel gammastep foot xdg-user-dirs xdg-desktop-portal-wlr \
xdg-desktop-portal-gtk wlroots0.18-devel xorg-server-xwayland wlr-randr \
wdisplays wl-clipboard grim slurp seatd turnstile NetworkManager \
qt5-wayland qt6-wayland adwaita-qt adwaita-qt6 tofi trash-cli mako \
swaylock swaybg"
CORE_UTILS_PKG="\
neovim stow handlr bash-completion dtach socklog-void ripgrep fd fzf cronie ntpd-rs \
qalculate zstd keychain" 
FONTS_PKG="dejavu-fonts-ttf noto-fonts-ttf noto-fonts-cjk noto-fonts-emoji\
nerd-fonts-ttf nerd-fonts-emoji "
MEDIA_PKG="\
imv pipewire alsa-pipewire alsa-utils ffmpeg zathura-pdf-mupdf ImageMagick \
cmus cmus-pulseaudio cmus-faad cmus-flac"
BLUETOOTH_PKG="bluez libspa-bluetooth"
VIRT_PKG="\
flatpak podman catatonit libvirt qemu virt-manager"
EXTRA_PKG="\
xtools smartmontools lm_sensors dmidecode xwininfo dnscrypt-proxy \
catgirl htop btop nvtop tlp tlp-rdw keepassxc syncthing glxinfo
git tig vis tealdeer ldns bind-utils socat uv strace jq gdu \
man-pages-devel tcpdump"
AMD_GPU_MESA="\
linux-firmware-amd mesa-dri vulkan-loader mesa-vulkan-radeon \
mesa-vaapi mesa-vdpau"
AMD_GPU_VLK="{AMD_GPU_MESA} amdvlk"
INTEL_GPU="\
linux-firmware-intel mesa-dri vulkan-loader mesa-vulkan-intel \
intel-video-accel"
NVIDIA_GPU_PKG="\
nvidia nvidia-libs-32bit libgcc-32bit libstdc++-32bit \
libdrm-32bit libglvnd-32bit"
ALL_PKG_EXCEPT_GPU="${CORE_DESKTOP_PKG} ${CORE_UTILS_PKG} ${FONTS_PKG} ${MEDIA_PKG} \
${BLUETOOTH_PKG} ${VIRT_PKG} ${EXTRA_PKG}"

JPSTACK_PKGS="${ALL_PKG_EXCEPT_GPU}"
JPSTACK_DIR="${HOME}/Coding/jpstack"
REPOSITORIES="\
void-repo-nonfree void-repo-multilib void-repo-multilib-nonfree"
USER=$(whoami)
GROUPS="_seatd input video socklog libvirt"
DISABLE_SERVICES="\
dhcpcd wpa_supplicant agetty-tty4 agetty-tty5 agetty-tty6"
ENABLE_SERVICES="\
dbus NetworkManager cronie ntpd-rs seatd turnstiled nanoklogd \
socklog-unix libvirtd virtlockd virtlogd"

configure_dracut() {
	sudo tee /etc/dracut.conf.d/99-jpstack.conf >/dev/null << 'EOF'
hostonly=yes
EOF
}

# has to be in /usr/lib because it gives a error if its in /etc
configure_sysctl() {
	sudo tee /usr/lib/sysctl.d/99-jpstack.conf >/dev/null << 'EOF'
# -- Memory management --
vm.swappiness = 30
vm.vfs_cache_pressure = 50
vm.dirty_ratio = 10
vm.dirty_background_ratio = 5
# vm.max_map_count = 1048576

# -- Network optimization --
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_intvl = 60
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_slow_start_after_idle = 0

# -- Security hardening --
net.ipv4.tcp_syncookies = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# -- File system performance --
fs.file-max = 2097152
EOF

	sudo sysctl --system
}

make_clean_install() {
	cd "$1"
	make clean
	make -j$(nproc)
	sudo make install
	cd ..
}

echo "Superuser privileges are required. You might need to enter your sudo password."

# Install repository packages
sudo xbps-install -Suy ${REPOSITORIES}

# Install system packages
sudo xbps-install -Suy ${JPSTACK_PKGS}

# Create XDG user directories
xdg-user-dirs-update

# Add user to groups
for group in ${GROUPS}; do
	sudo usermod -aG ${group} ${USER}
done

# Disable services
for service in ${DISABLE_SERVICES}; do
	[ -h "/var/service/${service}" ] && echo "disabling ${service} ..." \
	  && sudo sv stop "${service}" && sudo unlink "/var/service/${service}"
done

# Enable services
for service in ${ENABLE_SERVICES}; do
	[ ! -d "/var/service/${service}" ] && echo "enabling ${service} ..." \
	  && sudo ln -s "/etc/sv/${service}" "/var/service/${service}" && sudo sv start "${service}"
done

# Install flatpak packages
flatpak remote-add --if-not-exists --user flathub https://dl.flathub.org/repo/flathub.flatpakrepo
flatpak install --user --noninteractive --or-update flathub com.github.tchx84.Flatseal
flatpak install --user --noninteractive --or-update flathub com.saivert.pwvucontrol
# flatpak install --user --noninteractive --or-update flathub io.github.dimtpap.coppwr

# Create directory for compiled packages
mkdir -p "${JPSTACK_DIR}"
cd "${JPSTACK_DIR}"

[ ! -d "sfm" ] && git clone "https://github.com/jpnt/sfm"
make_clean_install sfm

[ ! -d "slstatus" ] && git clone "https://github.com/jpnt/slstatus"
make_clean_install slstatus

[ ! -d "dwl" ] && git clone "https://github.com/jpnt/dwl"
make_clean_install dwl

configure_dracut
configure_sysctl

echo "done."
